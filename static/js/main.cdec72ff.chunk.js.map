{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["buttons","bank1","id","keyTrigger","url","bank2","App","className","Component","Console","props","state","power","vol","bank","style","boxShadow","margin","handleDrag","bind","switch","switchBank","document","onkeydown","key","getElementById","toUpperCase","click","e","console","log","ui","this","setState","x","map","elem","onClick","Howl","src","volume","play","type","defaultChecked","axis","defaultPosition","y","bounds","left","right","onDrag","grid","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.cdec72ff.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport \"./App.css\";\nimport { Howl } from \"howler\";\nimport Draggable from \"react-draggable\";\n\nconst buttons = {\n  bank1: [\n    {\n      id: \"hard-club\",\n      keyTrigger: \"Q\",\n      url: \"https://freesound.org/data/previews/331/331589_5820980-lq.mp3\",\n    },\n    {\n      id: \"house-drum\",\n      keyTrigger: \"W\",\n      url: \"https://freesound.org/data/previews/132/132584_2409787-lq.mp3\",\n    },\n    {\n      id: \"bass-drum\",\n      keyTrigger: \"E\",\n      url: \"https://freesound.org/data/previews/459/459895_4448255-lq.mp3\",\n    },\n    {\n      id: \"kick-drum\",\n      keyTrigger: \"A\",\n      url: \"https://freesound.org/data/previews/519/519279_3797507-lq.mp3\",\n    },\n    {\n      id: \"fx-drum\",\n      keyTrigger: \"S\",\n      url: \"https://freesound.org/data/previews/232/232014_736471-lq.mp3\",\n    },\n    {\n      id: \"hip-drum\",\n      keyTrigger: \"D\",\n      url: \"https://freesound.org/data/previews/4/4832_7423-lq.mp3\",\n    },\n    {\n      id: \"maple-hoop\",\n      keyTrigger: \"Z\",\n      url: \"https://freesound.org/data/previews/84/84480_377011-lq.mp3\",\n    },\n    {\n      id: \"al-hoop\",\n      keyTrigger: \"X\",\n      url: \"https://freesound.org/data/previews/25/25602_48671-lq.mp3\",\n    },\n    {\n      id: \"light-hoop\",\n      keyTrigger: \"C\",\n      url: \"https://freesound.org/data/previews/168/168312_599528-lq.mp3\",\n    },\n  ],\n  bank2: [\n    {\n      id: \"shaman-drum\",\n      keyTrigger: \"Q\",\n      url: \"https://freesound.org/data/previews/321/321132_1337335-lq.mp3\",\n    },\n    {\n      id: \"african-drum\",\n      keyTrigger: \"W\",\n      url: \"https://freesound.org/data/previews/460/460090_1764667-lq.mp3\",\n    },\n    {\n      id: \"deep-house-kick\",\n      keyTrigger: \"E\",\n      url: \"https://freesound.org/data/previews/347/347624_1126957-lq.mp3\",\n    },\n    {\n      id: \"kick-atomize\",\n      keyTrigger: \"A\",\n      url: \"https://freesound.org/data/previews/494/494184_10655277-lq.mp3\",\n    },\n    {\n      id: \"electronic-drum\",\n      keyTrigger: \"S\",\n      url: \"https://freesound.org/data/previews/425/425320_7425810-lq.mp3\",\n    },\n    {\n      id: \"medium-drum\",\n      keyTrigger: \"D\",\n      url: \"https://freesound.org/data/previews/332/332388_1976991-lq.mp3\",\n    },\n    {\n      id: \"kick-drum\",\n      keyTrigger: \"Z\",\n      url: \"https://freesound.org/data/previews/502/502951_4600366-lq.mp3\",\n    },\n    {\n      id: \"stroper-drum\",\n      keyTrigger: \"X\",\n      url: \"https://freesound.org/data/previews/103/103365_1225281-lq.mp3\",\n    },\n    {\n      id: \"synthetic-drum\",\n      keyTrigger: \"C\",\n      url: \"https://freesound.org/data/previews/268/268114_2127539-lq.mp3\",\n    },\n  ],\n};\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"conteiner\">\n        <Console />\n      </div>\n    );\n  }\n}\n\nclass Console extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      power: true,\n      vol: 1.0,\n      bank: \"bank1\",\n      style : {boxShadow : \"0px 0px 0px 0px #76bbf4\", margin: \"3px 3px 3px 3px\"}\n    };\n    this.handleDrag = this.handleDrag.bind(this);\n    this.switch = this.switch.bind(this);\n    this.switchBank = this.switchBank.bind(this);\n  }\n  componentDidMount() {\n    const clickButton = (key) => {\n      try {\n        document.getElementById(key.key.toUpperCase()).click()\n      } catch (e) {\n        console.log(`${key.key.toUpperCase()} is not in the Drum, sorry`);\n      }\n    };\n    document.onkeydown = clickButton;\n  }\n\n  handleDrag(e, ui) {\n    this.setState({\n      vol: ui.x / 110,\n    });\n  }\n\n  switch() {\n    this.setState({\n      power: !this.state.power,\n    });\n  }\n\n  switchBank() {\n    this.setState({\n      bank: this.state.bank === \"bank1\" ? \"bank2\" : \"bank1\",\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"conteiner-inner\">\n        <div className=\"btns\">\n          {buttons[this.state.bank].map((elem) => {\n            return (\n              <button\n                id={elem.keyTrigger}\n                onClick={() => {\n                  let sound = new Howl({\n                    src: [elem.url],\n                    volume: this.state.vol,\n                  });\n                  sound.play();\n                }}\n                className=\"btns-inst\"\n                key={elem.id}\n              >\n                {elem.keyTrigger}\n              </button>\n            );\n          })}\n        </div>\n        <div className=\"console\">\n          <div>\n            <p className=\"console-text power\">power</p>\n            <label className=\"switch\">\n              <input\n                onClick={this.switch}\n                type=\"checkbox\"\n                defaultChecked={true}\n              />\n              <span className=\"slider round\"></span>\n            </label>\n          </div>\n          <div className=\"drag-obj\">\n            <p></p>\n            <Draggable\n              axis=\"x\"\n              defaultPosition={{ x: 110, y: 0 }}\n              bounds={{ left: 0, right: 110 }}\n              onDrag={this.handleDrag}\n              grid={[5,5]}\n            >\n              <div className=\"drag-p\"></div>\n            </Draggable>\n            <div className=\"line\"></div>\n          </div>\n          <p className=\"console-text bank\">bank</p>\n          <label className=\"switch\">\n            <input onClick={this.switchBank} type=\"checkbox\" />\n            <span className=\"slider round\"></span>\n          </label>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App.js';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}